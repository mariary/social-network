{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Message/Message.module.css","components/Navbar/FriendsItem/FriendsItem.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Profile/ProfileUser/ProfileUser.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","serviceWorker.js","components/redux/profile_reducer.js","components/redux/dialogs_reducer.js","components/redux/sidebar_reducer.js","components/redux/state.js","components/Header/Header.jsx","components/Navbar/FriendsItem/FriendsItem.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileUser/ProfileUser.jsx","components/Profile/Profile.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","profileReducer","state","action","type","newPost","id","message","newPostText","likes","post","push","newText","dialogsReducer","newMessage","newMessageText","src","sender","time","messages","sidebarReducer","store","_state","profilePage","dialogsPage","dialogs","name","sidebar","friends","_callSubscriber","console","log","getState","this","subscribe","observer","dispatch","Header","className","s","header","FriendsItem","props","person","link","to","activeClassName","active","img","Navbar","friendsElement","map","f","nav","item","title","Post","MyPosts","postElement","p","newPostElement","React","createRef","onChange","text","updateNewPostTextActionCreator","current","value","ref","placeholder","onClick","btn","ProfileUser","profile_user","user","describition","Profile","profile_content","Message","DialogItem","Dialogs","dialogsElements","d","messagedElements","m","newMessageElement","dialogs_content","dialogs_items","write","updateNewMessageTextActionCreator","App","path","render","News","Music","rerenderEntireTree","ReactDOM","StrictMode","bind","document","getElementById"],"mappings":"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","file":"static/js/main.aae63e0a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__jXQcU\",\"item\":\"Navbar_item__2gd71\",\"link\":\"Navbar_link__BbTui\",\"active\":\"Navbar_active__1TuBh\",\"friends\":\"Navbar_friends__3fV9Z\",\"title\":\"Navbar_title__TP1YU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3QVbc\",\"item\":\"Message_item__WNNKY\",\"text\":\"Message_text__3oc5B\",\"img\":\"Message_img__2e_ql\",\"time\":\"Message_time__3yDGE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"FriendsItem_person__36O8x\",\"img\":\"FriendsItem_img__FfqK-\",\"link\":\"FriendsItem_link__2LJvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs_content\":\"Dialogs_dialogs_content__24kfZ\",\"dialogs_items\":\"Dialogs_dialogs_items__2YB81\",\"messages\":\"Dialogs_messages__1Om56\",\"btn\":\"Dialogs_btn__3zdqE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"DialogItem_person__33w67\",\"link\":\"DialogItem_link__PdpEX\",\"active\":\"DialogItem_active__1WE-y\",\"img\":\"DialogItem_img__1JNyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile_user\":\"ProfileUser_profile_user__1pAcI\",\"user\":\"ProfileUser_user__ctWJz\",\"post\":\"ProfileUser_post__1QtQT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__1qwEs\",\"btn\":\"MyPosts_btn__1ijkO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__OkrTt\",\"likes\":\"Post_likes__k9cSm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__myfuq\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\n\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nconst profileReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id:5,\r\n                message:state.newPostText,\r\n                likes:0,\r\n            }\r\n            state.post.push(newPost);\r\n            state.newPostText = '';\r\n            return state;\r\n        case UPDATE_NEW_POST_TEXT :\r\n            state.newPostText = action.newText;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addPostActionCreator = () => ({ type: ADD_POST});\r\n\r\nexport const updateNewPostTextActionCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newText: text});\r\n\r\n\r\nexport default profileReducer;","const ADD_MESSAGE = 'ADD-MESSAGE';\r\n\r\nconst UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\n\r\nconst dialogsReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            let newMessage = {\r\n                id:7,\r\n                message:state.newMessageText,\r\n                src:'https://www.pngrepo.com/download/5125/avatar.png',\r\n                sender:'me',\r\n                time:'13:20',\r\n            }\r\n            state.messages.push(newMessage);\r\n            state.newMessageText = '';\r\n            return state;\r\n        case UPDATE_NEW_MESSAGE_TEXT :\r\n            state.newMessageText = action.newText ;\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addMessageActionCreator = () => ({ type: ADD_MESSAGE});\r\n\r\nexport const updateNewMessageTextActionCreator = (text) => ({ type: UPDATE_NEW_MESSAGE_TEXT, newText: text});\r\n\r\n\r\nexport default dialogsReducer;","const sidebarReducer = (state, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import profileReducer from \"./profile_reducer\";\r\nimport dialogsReducer from \"./dialogs_reducer\";\r\nimport sidebarReducer from \"./sidebar_reducer\";\r\n\r\nlet store = {\r\n\r\n    _state : {\r\n\r\n        profilePage: {\r\n\r\n            post: [\r\n                {id: 1, message: 'Hey, how are you?', likes: 3},\r\n                {id: 2, message: 'Che delaesh', likes: 5}\r\n            ],\r\n\r\n            newPostText: ''\r\n\r\n        },\r\n\r\n        dialogsPage: {\r\n\r\n            messages: [\r\n                {id: 1, message: 'hello,how are u???', src:'https://www.pngrepo.com/download/5125/avatar.png', sender:'me',time:'13:20'},\r\n                {id: 2, message: 'goooooodddd', src:'https://www.pngrepo.com/download/5125/avatar.png', sender:'you', time:'13:20'},\r\n                {id: 3, message: 'and u??', src:'https://www.pngrepo.com/download/5125/avatar.png', sender:'you', time:'13:20'},\r\n                {id: 4, message: 'i\\'m bad(', src:'https://www.pngrepo.com/download/5125/avatar.png', sender:'me', time:'13:20'},\r\n                {id: 5, message: 'what\\'s up, bro??', src:'https://www.pngrepo.com/download/5125/avatar.png', sender:'you', time:'13:20'},\r\n                {id: 6, message: 'miss you....', src:'https://www.pngrepo.com/download/5125/avatar.png', sender:'me', time:'13:20'}\r\n            ],\r\n\r\n            dialogs: [\r\n                {id: 1, name: 'Андрей', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id: 2, name: 'Не Андрей', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id: 3, name: 'Виктор', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id: 4, name: 'Не Виктор', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id: 5, name: 'Аня', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id: 6, name: 'Лиза', src:'https://www.pngrepo.com/download/5125/avatar.png'}\r\n            ],\r\n\r\n            newMessageText: ''\r\n        },\r\n\r\n        sidebar: {\r\n\r\n            friends: [\r\n                {id:1, name: 'Ann', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id:2, name: 'Maria', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id:3, name: 'Max', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id:4, name: 'Alex', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id:5, name: 'Andrew', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n                {id:6, name: 'Sveta', src:'https://www.pngrepo.com/download/5125/avatar.png'},\r\n            ]\r\n        }\r\n    },\r\n    _callSubscriber() {\r\n        console.log('lol');\r\n    },\r\n\r\n    getState () {\r\n        return this._state;\r\n    },\r\n    subscribe(observer) {\r\n        this._callSubscriber = observer;\r\n    },\r\n\r\n    dispatch(action) {\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action)\r\n        this._state.dialogsPage = dialogsReducer(this._state.dialogsPage, action)\r\n        this._state.sidebar = sidebarReducer(this._state.sidebar, action)\r\n\r\n        this._callSubscriber(this._state)\r\n    }\r\n}\r\n\r\n\r\nexport default store;\r\nwindow.store = store;","import React from 'react';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n          <img src='https://about.gitlab.com/images/press/logo/png/gitlab-logo-1-color-white-rgb.png'/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport s from './FriendsItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport sidebarReducer from \"../../redux/sidebar_reducer\";\r\n\r\nconst FriendsItem = (props) => {\r\n\r\n    return (\r\n        <div className={s.person}>\r\n            <NavLink className={s.link} to={'#'} activeClassName={s.active}>\r\n                <img className={s.img} src={props.src}/>\r\n                <div className={s.name}>{props.name}</div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FriendsItem\r\n\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport FriendsItem from \"./FriendsItem/FriendsItem\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    let friendsElement = props.state.friends.map(f => <FriendsItem src={f.src} name={f.name} id={f.id}/> )\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}><NavLink className={s.link} to='/profile'\r\n                                             activeClassName={s.active}>Profile</NavLink></div>\r\n            <div className={s.item}><NavLink className={s.link} to='/dialogs'\r\n                                             activeClassName={s.active}>Message</NavLink></div>\r\n            <div className={s.item}><NavLink className={s.link} to='/news' activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div className={s.item}><NavLink className={s.link} to='/music'\r\n                                             activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div className={s.friends}>\r\n                <p className={s.title}>Friends</p>\r\n                {friendsElement}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n      <div>\r\n        <div className={s.item}>\r\n          {props.message}\r\n          <div className={s.likes}>\r\n            {props.likes}\r\n          </div>\r\n          </div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Post","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../redux/profile_reducer\";\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let postElement = props.post.map(p => <Post message={p.message} likes={p.likes}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let addPost = () => {\r\n        let text = newPostElement.current.value;\r\n        if (text === '') {\r\n            let i = 2;\r\n        } else {\r\n            props.dispatch(addPostActionCreator());\r\n        }\r\n    }\r\n\r\n    let onPostChange = () => {\r\n        let text = newPostElement.current.value;\r\n        let action = updateNewPostTextActionCreator(text);\r\n        props.dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.post}>\r\n                <h2>My posts</h2>\r\n                <div>\r\n            <textarea onChange={onPostChange}\r\n                      ref={newPostElement}\r\n                      placeholder=\"your news...\"\r\n                      value={props.newPostText}>\r\n            </textarea>\r\n                </div>\r\n                <button onClick={ addPost } className={s.btn}>Отправить</button>\r\n            </div>\r\n            {postElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport s from './ProfileUser.module.css';\r\n\r\nconst ProfileUser = () => {\r\n    return (\r\n        <div className={s.profile_user}>\r\n            <img src='https://i.pinimg.com/originals/4b/59/00/4b59004c843338fda818bf935bb6a030.jpg'/>\r\n            <div className={s.user}>\r\n                <img src='https://www.pngrepo.com/download/5125/avatar.png'/>\r\n                <h2> Maria R.</h2>\r\n                <div className={s.describition}>\r\n                    <p>Date of birth: 20 May</p>\r\n                    <p>City: Omsk</p>\r\n                    <p>Education: SPBPU </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileUser","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts';\r\nimport ProfileUser from \"./ProfileUser/ProfileUser\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={s.profile_content}>\r\n            <ProfileUser/>\r\n            <MyPosts post={props.profilePage.post}\r\n                     dispatch={props.dispatch}\r\n                     newPostText={props.profilePage.newPostText}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react';\r\nimport s from './Message.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message + ' ' + `${props.sender}`}>\r\n            <div className={s.item}>\r\n                <NavLink className={s.link} to={'/dialogs/' + props.id} activeClassName={s.active}>\r\n                    <img className={s.img} src={props.src}/>\r\n                </NavLink>\r\n                <div className={s.text}>\r\n                {props.message}\r\n                </div>\r\n                <div className={s.time}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    return (\r\n        <div className={s.person}>\r\n            <NavLink className={s.link} to={'/dialogs/' + props.id} activeClassName={s.active}>\r\n                <img className={s.img} src={props.src}/>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {addMessageActionCreator, updateNewMessageTextActionCreator} from \"../redux/dialogs_reducer\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let dialogsElements = props.state.dialogs.map(d => <DialogItem name={d.name} id={d.id} src={d.src}/>);\r\n\r\n    let messagedElements = props.state.messages.map(m => <Message message={m.message} id={m.id} src={m.src}\r\n                                                                  sender={m.sender} time={m.time}/>);\r\n\r\n    let newMessageElement = React.createRef();\r\n\r\n    let addMessage = () => {\r\n        let text = newMessageElement.current.value;\r\n        if (text === '') {\r\n            let i = 2;\r\n        } else {\r\n            props.dispatch(addMessageActionCreator());\r\n        }\r\n    }\r\n\r\n    let onMessageChange = () => {\r\n        let text = newMessageElement.current.value;\r\n        let action = updateNewMessageTextActionCreator(text);\r\n        props.dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs_content}>\r\n            <div className={s.dialogs_items}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagedElements}\r\n                <div className={s.write}>\r\n                    <textarea placeholder=\"your message...\"\r\n                              onChange={onMessageChange}\r\n                              ref={newMessageElement}\r\n                              value={props.newMessageText}>\r\n                    </textarea>\r\n                    <button onClick={ addMessage } className={s.btn}>Отправить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n      <div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport Profile from './components/Profile/Profile';\nimport Dialogs from './components/Dialogs/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport {Route} from 'react-router-dom';\n\nconst App = (props) => {\n    return (\n        <div className='app-wrapper'>\n          <Header/>\n          <Navbar state={props.state.sidebar}/>\n            <div className='app-wrapper-content'>\n              <Route path='/profile' render = { () => <Profile  profilePage={props.state.profilePage}\n                                                                dispatch={props.dispatch}\n                                                        /> }/>\n              <Route path='/dialogs' render = { () => <Dialogs state={props.state.dialogsPage}\n                                                               newMessageText={props.state.dialogsPage.newMessageText}\n                                                               dispatch={props.dispatch}\n                                                        /> } />\n              <Route path='/news' render = { () => <News/> } />\n              <Route path='/music' render = { () => <Music/> } />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from \"./components/redux/state\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from \"react-router-dom\";\n\n\nexport let rerenderEntireTree = (state) => {\n    ReactDOM.render(\n        < React.StrictMode >\n\n            < BrowserRouter >\n\n                < App\n                    state = {state}\n                    dispatch = {store.dispatch.bind(store)}\n                />\n                />\n\n                < /BrowserRouter>\n\n                    < /React.StrictMode>,\n                        document.getElementById('root')\n                        )\n                        ;\n                        }\n\n\nrerenderEntireTree(store.getState());\n\nstore.subscribe(rerenderEntireTree);\n"],"sourceRoot":""}